#!/usr/bin/env groovy

pipeline {

 agent {
    docker {
      image 'docker:24.0.5' // or any version you prefer
      args '-v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  parameters {
    string(name: 'VERSION', defaultValue: '21')
    choice(name: 'QUALIFIER', choices: ['snapshot', 'release'])
  }

  environment {
    S3_BUCKET = 'efris-swat-dev-js'
    S3_OBJECT = 'EFRIS_Offline_Mode_Enabler_for_Ubuntu_V' + '$VERSION' + '.tar.gz'
    NEXUS_REGISTRY = 'nexus.example.com:8082'
  }

  stages {
    stage('Build Docker Image') {
      steps {
          dir('ug/server/tcs') {
            sh '''
              echo "Current directory: $(pwd)"
              echo "Building Docker image..."
              docker build -t $NEXUS_REGISTRY/efris:$VERSION-$QUALIFIER .
            '''
        }
      }
    }

    stage('Run Docker Container') {
      steps {
        sh '''
          echo "Running Docker container..."
          docker rm -f efris_container || true
          docker run -d --name efris_container -p 9880:9880 $NEXUS_REGISTRY/efris:$VERSION-$QUALIFIER
        '''
     }
    }

    stage('Push Docker Image to Nexus') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'nexus-docker-creds', usernameVariable: 'NEXUS_USER', passwordVariable: 'NEXUS_PASS')]) {
          sh '''
            echo "$NEXUS_PASS" | docker login $NEXUS_REGISTRY -u "$NEXUS_USER" --password-stdin
            docker push $NEXUS_REGISTRY/efris:$VERSION-$QUALIFIER
            docker logout $NEXUS_REGISTRY
          '''
        }
      }
    }
  }

  post {
      success {
        echo "Docker container started and image pushed successfully: $NEXUS_REGISTRY/efris:$VERSION-$QUALIFIER"
      }
      failure {
        echo "Pipeline failed. Check logs."
      }
    }
}
