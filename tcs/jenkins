pipeline {
  agent any

  parameters {
    string(name: 'S3_BUCKET', defaultValue: 's3-bucket-name', description: 'S3 bucket name')
    string(name: 'S3_OBJECT', defaultValue: 'path/to/efris_server.tar.gz', description: 'S3 object path')
    string(name: 'VERSION', defaultValue: '1.0.0', description: 'App version')
    string(name: 'QUALIFIER', defaultValue: 'release', description: 'Image qualifier')
    string(name: 'NEXUS_REGISTRY', defaultValue: 'nexus.example.com:8082', description: 'Nexus Docker registry')
  }

  stages {

    stage('Build Docker Image') {
      steps {
        sh '''
          echo "Building Docker image..."
          docker build -t $NEXUS_REGISTRY/efris:$VERSION-$QUALIFIER efris_server
        '''
      }
    }

    stage('Run Docker Container') {
      steps {
        sh '''
          echo "Running Docker container..."
          docker rm -f efris_container || true
          docker run -d --name efris_container -p 9880:9880 $NEXUS_REGISTRY/efris:$VERSION-$QUALIFIER
        '''
     }
    }

    stage('Push Docker Image to Nexus') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'nexus-docker-creds', usernameVariable: 'NEXUS_USER', passwordVariable: 'NEXUS_PASS')]) {
          sh '''
            echo "$NEXUS_PASS" | docker login $NEXUS_REGISTRY -u "$NEXUS_USER" --password-stdin
            docker push $NEXUS_REGISTRY/efris:$VERSION-$QUALIFIER
            docker logout $NEXUS_REGISTRY
          '''
        }
      }
    }
  }

  post {
      success {
        echo "Docker container started and image pushed successfully: $NEXUS_REGISTRY/efris:$VERSION-$QUALIFIER"
      }
      failure {
        echo "Pipeline failed. Check logs."
      }
    }
}
